package NewLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAction = createDescriptorForAction();
  /*package*/ final ConceptDescriptor myConceptInputField = createDescriptorForInputField();
  /*package*/ final ConceptDescriptor myConceptInputFieldReference = createDescriptorForInputFieldReference();
  /*package*/ final ConceptDescriptor myConceptLogEntry = createDescriptorForLogEntry();
  /*package*/ final ConceptDescriptor myConceptLogger = createDescriptorForLogger();
  /*package*/ final ConceptDescriptor myConceptMeasurement = createDescriptorForMeasurement();
  /*package*/ final ConceptDescriptor myConceptMeasurementReference = createDescriptorForMeasurementReference();
  /*package*/ final ConceptDescriptor myConceptOutputField = createDescriptorForOutputField();
  /*package*/ final ConceptDescriptor myConceptPHHP = createDescriptorForPHHP();
  /*package*/ final ConceptDescriptor myConceptTriggerRule = createDescriptorForTriggerRule();
  /*package*/ final EnumerationDescriptor myEnumerationSeverityLevel = new EnumerationDescriptor_SeverityLevel();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
    deps.extendedLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage");
    deps.aggregatedLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAction, myConceptInputField, myConceptInputFieldReference, myConceptLogEntry, myConceptLogger, myConceptMeasurement, myConceptMeasurementReference, myConceptOutputField, myConceptPHHP, myConceptTriggerRule);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Action:
        return myConceptAction;
      case LanguageConceptSwitch.InputField:
        return myConceptInputField;
      case LanguageConceptSwitch.InputFieldReference:
        return myConceptInputFieldReference;
      case LanguageConceptSwitch.LogEntry:
        return myConceptLogEntry;
      case LanguageConceptSwitch.Logger:
        return myConceptLogger;
      case LanguageConceptSwitch.Measurement:
        return myConceptMeasurement;
      case LanguageConceptSwitch.MeasurementReference:
        return myConceptMeasurementReference;
      case LanguageConceptSwitch.OutputField:
        return myConceptOutputField;
      case LanguageConceptSwitch.PHHP:
        return myConceptPHHP;
      case LanguageConceptSwitch.TriggerRule:
        return myConceptTriggerRule;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationSeverityLevel);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Action", 0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0xab3ad9915390ee8L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:66d9b93c-f562-4f88-af54-ce6ee3a9563c(NewLanguage.structure)/771150834208149224");
    b.version(3);
    b.aggregate("measurements", 0xab3ad9915406fa8L).target(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0xab3ad99153fe343L).optional(true).ordered(true).multiple(true).origin("771150834208632744").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInputField() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "InputField", 0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0x566d5c3e4db445caL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:66d9b93c-f562-4f88-af54-ce6ee3a9563c(NewLanguage.structure)/6227735282384651722");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInputFieldReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "InputFieldReference", 0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0x566d5c3e4db52986L);
    b.class_(false, false, false);
    // extends: jetbrains.mps.baseLanguage.structure.Expression
    b.super_(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:66d9b93c-f562-4f88-af54-ce6ee3a9563c(NewLanguage.structure)/6227735282384710022");
    b.version(3);
    b.associate("field", 0x566d5c3e4db52eebL).target(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0x566d5c3e4db445caL).optional(false).origin("6227735282384711403").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLogEntry() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "LogEntry", 0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0xab3ad991553dfabL);
    b.class_(false, false, false);
    b.origin("r:66d9b93c-f562-4f88-af54-ce6ee3a9563c(NewLanguage.structure)/771150834209906603");
    b.version(3);
    b.property("message", 0xab3ad991553e41aL).type(PrimitiveTypeId.STRING).origin("771150834209907738").done();
    b.property("severity", 0xab3ad9915556f22L).type(MetaIdFactory.dataTypeId(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0xab3ad991555741dL)).origin("771150834210008866").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLogger() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Logger", 0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0xab3ad99155567eeL);
    b.class_(false, false, false);
    b.origin("r:66d9b93c-f562-4f88-af54-ce6ee3a9563c(NewLanguage.structure)/771150834210007022");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMeasurement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Measurement", 0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0xab3ad99153fd70fL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:66d9b93c-f562-4f88-af54-ce6ee3a9563c(NewLanguage.structure)/771150834208593679");
    b.version(3);
    b.property("min", 0xab3ad99154bf7d0L).type(PrimitiveTypeId.INTEGER).origin("771150834209388496").done();
    b.property("max", 0xab3ad99154c0022L).type(PrimitiveTypeId.INTEGER).origin("771150834209390626").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMeasurementReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "MeasurementReference", 0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0xab3ad99153fe343L);
    b.class_(false, false, false);
    b.origin("r:66d9b93c-f562-4f88-af54-ce6ee3a9563c(NewLanguage.structure)/771150834208596803");
    b.version(3);
    b.associate("measurement", 0xab3ad99153ff232L).target(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0xab3ad99153fd70fL).optional(false).origin("771150834208600626").done();
    b.aggregate("expression", 0xab3ad991540865eL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("771150834208638558").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOutputField() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "OutputField", 0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0x566d5c3e4db490c8L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:66d9b93c-f562-4f88-af54-ce6ee3a9563c(NewLanguage.structure)/6227735282384670920");
    b.version(3);
    b.aggregate("expression", 0x566d5c3e4db4e074L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("6227735282384691316").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPHHP() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "PHHP", 0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0x566d5c3e4db17b4aL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:66d9b93c-f562-4f88-af54-ce6ee3a9563c(NewLanguage.structure)/6227735282384468810");
    b.version(3);
    b.aggregate("action", 0xab3ad99153b8fb5L).target(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0xab3ad9915390ee8L).optional(true).ordered(true).multiple(true).origin("771150834208313269").done();
    b.aggregate("measurement", 0xab3ad9915402dcbL).target(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0xab3ad99153fd70fL).optional(true).ordered(true).multiple(true).origin("771150834208615883").done();
    b.aggregate("inputField", 0x566d5c3e4db44e6cL).target(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0x566d5c3e4db445caL).optional(true).ordered(true).multiple(true).origin("6227735282384653932").done();
    b.aggregate("outputField", 0x566d5c3e4db4963aL).target(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0x566d5c3e4db490c8L).optional(true).ordered(true).multiple(true).origin("6227735282384672314").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTriggerRule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "TriggerRule", 0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0xab3ad99155569e4L);
    b.class_(false, false, false);
    b.origin("r:66d9b93c-f562-4f88-af54-ce6ee3a9563c(NewLanguage.structure)/771150834210007524");
    b.version(3);
    return b.create();
  }
}
