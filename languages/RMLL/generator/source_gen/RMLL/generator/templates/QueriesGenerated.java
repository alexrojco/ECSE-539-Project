package RMLL.generator.templates;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.impl.query.QueryProviderBase;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SEnumOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.random.RandomGenerator;
import jetbrains.mps.generator.template.ReferenceMacroContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.generator.template.TemplateArgumentContext;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import jetbrains.mps.generator.template.TemplateQueryContext;
import java.util.Map;
import jetbrains.mps.generator.impl.query.ReductionRuleCondition;
import java.util.HashMap;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.generator.impl.query.QueryKey;
import jetbrains.mps.generator.template.ReductionRuleQueryContext;
import jetbrains.mps.generator.impl.GenerationFailureException;
import jetbrains.mps.generator.impl.query.SourceNodeQuery;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.generator.impl.query.SourceNodesQuery;
import java.util.Collection;
import jetbrains.mps.util.IterableUtil;
import jetbrains.mps.generator.impl.query.PropertyValueQuery;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.generator.impl.query.ReferenceTargetQuery;
import jetbrains.mps.generator.impl.query.CallArgumentQuery;
import jetbrains.mps.generator.impl.query.LabelInputQuery;
import jetbrains.mps.generator.template.LabelKeyQueryContext;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import org.jetbrains.mps.openapi.language.SContainmentLink;

@Generated
public class QueriesGenerated extends QueryProviderBase {
  public QueriesGenerated() {
    super(1);
  }
  public static boolean rule_Condition_2_0(final BaseMappingRuleContext _context) {
    return SEnumOperations.isMember(SPropertyOperations.getEnum(_context.getNode(), PROPS.type$6ngb), 0x101a5652d6e3a17eL);
  }
  public static boolean rule_Condition_2_1(final BaseMappingRuleContext _context) {
    return SEnumOperations.isMember(SPropertyOperations.getEnum(_context.getNode(), PROPS.type$6ngb), 0x101a5652d6e3a20aL);
  }
  public static boolean rule_Condition_2_2(final BaseMappingRuleContext _context) {
    return SEnumOperations.isMember(SPropertyOperations.getEnum(_context.getNode(), PROPS.type$6ngb), 0x101a5652d6e3a1c3L);
  }
  public static boolean rule_Condition_3_0(final BaseMappingRuleContext _context) {
    return SEnumOperations.isMember(SPropertyOperations.getEnum(_context.getNode(), PROPS.comparator$KuX2), 0xab3ad99156af9eaL);
  }
  public static boolean rule_Condition_3_1(final BaseMappingRuleContext _context) {
    return SEnumOperations.isMember(SPropertyOperations.getEnum(_context.getNode(), PROPS.comparator$KuX2), 0xab3ad99156afe85L);
  }
  public static boolean rule_Condition_3_2(final BaseMappingRuleContext _context) {
    return SEnumOperations.isMember(SPropertyOperations.getEnum(_context.getNode(), PROPS.comparator$KuX2), 0xab3ad99156afd4bL);
  }
  public static Object propertyMacro_GetValue_1_0(final PropertyMacroContext _context) {
    return _context.createUniqueName("inputField", null);
  }
  public static Object propertyMacro_GetValue_1_1(final PropertyMacroContext _context) {
    return _context.createUniqueName("outputField", null);
  }
  public static Object propertyMacro_GetValue_1_2(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_1_3(final PropertyMacroContext _context) {
    return _context.createUniqueName("action", null);
  }
  public static Object propertyMacro_GetValue_1_4(final PropertyMacroContext _context) {
    return _context.createUniqueName("measurement", null);
  }
  public static Object propertyMacro_GetValue_1_5(final PropertyMacroContext _context) {
    return _context.createUniqueName("measurementLabel", null);
  }
  public static Object propertyMacro_GetValue_1_6(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_1_7(final PropertyMacroContext _context) {
    return _context.createUniqueName("triggerRule", null);
  }
  public static Object propertyMacro_GetValue_1_8(final PropertyMacroContext _context) {
    return Integer.toString(SPropertyOperations.getInteger(_context.getNode(), PROPS.amount$ZJp4));
  }
  public static Object propertyMacro_GetValue_1_9(final PropertyMacroContext _context) {
    String result = "";
    if (SEnumOperations.isMember(SPropertyOperations.getEnum(_context.getNode(), PROPS.severity$nSqE), 0xab3ad991555741eL)) {
      result = "[INFO] ";
    } else if (SEnumOperations.isMember(SPropertyOperations.getEnum(_context.getNode(), PROPS.severity$nSqE), 0xab3ad9915557866L)) {
      result = "[WARNING] ";
    } else if (SEnumOperations.isMember(SPropertyOperations.getEnum(_context.getNode(), PROPS.severity$nSqE), 0xab3ad991555791eL)) {
      result = "[CRITICAL] ";
    }

    return result;
  }
  public static Object propertyMacro_GetValue_1_10(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.measurement$jlSV), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_1_11(final PropertyMacroContext _context) {
    String result = "";
    if (SEnumOperations.isMember(SPropertyOperations.getEnum(_context.getNode(), PROPS.comparator$KuX2), 0xab3ad99156af9eaL)) {
      result = "at ";
    } else if (SEnumOperations.isMember(SPropertyOperations.getEnum(_context.getNode(), PROPS.comparator$KuX2), 0xab3ad99156afe85L)) {
      result = "above ";
    } else if (SEnumOperations.isMember(SPropertyOperations.getEnum(_context.getNode(), PROPS.comparator$KuX2), 0xab3ad99156afd4bL)) {
      result = "below ";
    }

    return result;
  }
  public static Object propertyMacro_GetValue_1_12(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_1_13(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_1_14(final PropertyMacroContext _context) {
    return SPropertyOperations.getInteger(_context.getNode(), PROPS.min$wfiJ);
  }
  public static Object propertyMacro_GetValue_1_15(final PropertyMacroContext _context) {
    return SPropertyOperations.getInteger(_context.getNode(), PROPS.max$QmHx);
  }
  public static Object propertyMacro_GetValue_1_16(final PropertyMacroContext _context) {
    int result = 0;
    int diff = (int) (SPropertyOperations.getInteger(_context.getNode(), PROPS.max$QmHx) - SPropertyOperations.getInteger(_context.getNode(), PROPS.min$wfiJ)) / 4;
    if (SEnumOperations.isMember(SPropertyOperations.getEnum(_context.getNode(), PROPS.type$6ngb), 0x101a5652d6e3a20aL)) {
      result = SPropertyOperations.getInteger(_context.getNode(), PROPS.min$wfiJ);
    } else if (SEnumOperations.isMember(SPropertyOperations.getEnum(_context.getNode(), PROPS.type$6ngb), 0x101a5652d6e3a1c3L)) {
      result = SPropertyOperations.getInteger(_context.getNode(), PROPS.max$QmHx);
    } else if (SEnumOperations.isMember(SPropertyOperations.getEnum(_context.getNode(), PROPS.type$6ngb), 0x101a5652d6e3a17eL)) {
      result = ((int) RandomGenerator.of("Random").nextInt(SPropertyOperations.getInteger(_context.getNode(), PROPS.min$wfiJ) + diff, SPropertyOperations.getInteger(_context.getNode(), PROPS.max$QmHx) - diff));
    } else {
      result = 0;
    }
    return result;
  }
  public static Object propertyMacro_GetValue_1_17(final PropertyMacroContext _context) {
    return _context.createUniqueName("hGroup2", null);
  }
  public static Object propertyMacro_GetValue_1_18(final PropertyMacroContext _context) {
    return _context.createUniqueName("vpGroup", null);
  }
  public static Object propertyMacro_GetValue_1_19(final PropertyMacroContext _context) {
    return _context.createUniqueName("i", null);
  }
  public static Object propertyMacro_GetValue_1_20(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_2_0(final PropertyMacroContext _context) {
    return SPropertyOperations.getInteger(_context.getNode(), PROPS.max$QmHx) - SPropertyOperations.getInteger(_context.getNode(), PROPS.min$wfiJ);
  }
  public static Object propertyMacro_GetValue_2_1(final PropertyMacroContext _context) {
    return SPropertyOperations.getInteger(_context.getNode(), PROPS.max$QmHx) - SPropertyOperations.getInteger(_context.getNode(), PROPS.min$wfiJ);
  }
  public static Object propertyMacro_GetValue_2_2(final PropertyMacroContext _context) {
    return SPropertyOperations.getInteger(_context.getNode(), PROPS.min$wfiJ) - SPropertyOperations.getInteger(_context.getNode(), PROPS.max$QmHx);
  }
  public static Object propertyMacro_GetValue_3_0(final PropertyMacroContext _context) {
    return SPropertyOperations.getInteger(_context.getNode(), PROPS.amount$ZJp4);
  }
  public static Object propertyMacro_GetValue_3_1(final PropertyMacroContext _context) {
    return SPropertyOperations.getInteger(_context.getNode(), PROPS.amount$ZJp4);
  }
  public static Object propertyMacro_GetValue_3_2(final PropertyMacroContext _context) {
    return SPropertyOperations.getInteger(_context.getNode(), PROPS.amount$ZJp4);
  }
  public static Object referenceMacro_GetReferent_0_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), LINKS.field$opyZ), "LocalVar");
  }
  public static Object referenceMacro_GetReferent_0_1(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), LINKS.measurement$iS7O), "LocalMeasurement");
  }
  public static Object referenceMacro_GetReferent_1_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "InputFieldDeclaration");
  }
  public static Object referenceMacro_GetReferent_1_1(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "InputFieldDeclaration");
  }
  public static Object referenceMacro_GetReferent_1_2(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "ActionDeclaration");
  }
  public static Object referenceMacro_GetReferent_1_3(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), LINKS.measurement$iS7O), "MeasurementDeclaration");
  }
  public static Object referenceMacro_GetReferent_1_4(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), LINKS.measurement$iS7O), "MeasurementDeclaration");
  }
  public static Object referenceMacro_GetReferent_1_5(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "ActionDeclaration");
  }
  public static Object referenceMacro_GetReferent_1_6(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "ActionDeclaration");
  }
  public static Object referenceMacro_GetReferent_1_7(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "TriggerRuleDeclaration");
  }
  public static Object referenceMacro_GetReferent_1_8(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "OutputFieldDeclaration");
  }
  public static SNode sourceNodeQuery_1_0(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expression$A4nd);
  }
  public static SNode sourceNodeQuery_1_1(final SourceSubstituteMacroNodeContext _context) {
    return _context.getNode();
  }
  public static SNode sourceNodeQuery_1_2(final SourceSubstituteMacroNodeContext _context) {
    return _context.getNode();
  }
  public static SNode sourceNodeQuery_1_3(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expression$ZTQr);
  }
  public static Object templateArgumentQuery_1_0(final TemplateArgumentContext _context) {
    return ;
  }
  public static Iterable<SNode> sourceNodesQuery_1_0(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.inputField$5bPs);
  }
  public static Iterable<SNode> sourceNodesQuery_1_1(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.outputField$PINX);
  }
  public static Iterable<SNode> sourceNodesQuery_1_2(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.action$3fvT);
  }
  public static Iterable<SNode> sourceNodesQuery_1_3(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.measurement$rSWi);
  }
  public static Iterable<SNode> sourceNodesQuery_1_4(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.measurement$rSWi);
  }
  public static Iterable<SNode> sourceNodesQuery_1_5(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.trigger$7eId);
  }
  public static Iterable<SNode> sourceNodesQuery_1_6(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.inputField$5bPs);
  }
  public static Iterable<SNode> sourceNodesQuery_1_7(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.measurements$vk_X);
  }
  public static Iterable<SNode> sourceNodesQuery_1_8(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.action$3fvT);
  }
  public static Iterable<SNode> sourceNodesQuery_1_9(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.measurement$rSWi);
  }
  public static Iterable<SNode> sourceNodesQuery_1_10(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.action$3fvT);
  }
  public static Iterable<SNode> sourceNodesQuery_1_11(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.measurement$rSWi);
  }
  public static Iterable<SNode> sourceNodesQuery_1_12(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.action$3fvT);
  }
  public static Iterable<SNode> sourceNodesQuery_1_13(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.measurement$rSWi);
  }
  public static Iterable<SNode> sourceNodesQuery_1_14(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.inputField$5bPs);
  }
  public static Iterable<SNode> sourceNodesQuery_1_15(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.trigger$7eId);
  }
  public static Iterable<SNode> sourceNodesQuery_1_16(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.measurement$rSWi);
  }
  public static Iterable<SNode> sourceNodesQuery_1_17(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.trigger$7eId);
  }
  public static Iterable<SNode> sourceNodesQuery_1_18(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.action$3fvT);
  }
  public static Iterable<SNode> sourceNodesQuery_1_19(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.outputField$PINX);
  }
  public static SNode labelMapNode1_0(final TemplateQueryContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.logger$lybB);
  }
  public static SNode labelMapNode1_1(final TemplateQueryContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.logger$lybB);
  }
  public static SNode labelMapNode1_2(final TemplateQueryContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.logger$lybB);
  }
  public static SNode labelMapNode1_3(final TemplateQueryContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.logger$lybB);
  }
  private final Map<String, ReductionRuleCondition> rrcMethods = new HashMap<String, ReductionRuleCondition>();
  {
    int i = 0;
    rrcMethods.put("1160334767803501450", new RRC(i++));
    rrcMethods.put("1160334767804075725", new RRC(i++));
    rrcMethods.put("1160334767804095188", new RRC(i++));
    rrcMethods.put("1160334767814735007", new RRC(i++));
    rrcMethods.put("1160334767813452843", new RRC(i++));
    rrcMethods.put("1160334767814737356", new RRC(i++));
  }
  @Override
  @NotNull
  public ReductionRuleCondition getReductionRuleCondition(@NotNull QueryKey identity) {
    ReductionRuleCondition query = identity.forTemplateNode(rrcMethods);
    return (query != null ? query : super.getReductionRuleCondition(identity));
  }
  private static class RRC implements ReductionRuleCondition {
    private final int methodKey;
    public RRC(int methodKey) {
      this.methodKey = methodKey;
    }
    @Override
    public boolean check(ReductionRuleQueryContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.rule_Condition_2_0(ctx);
        case 1:
          return QueriesGenerated.rule_Condition_2_1(ctx);
        case 2:
          return QueriesGenerated.rule_Condition_2_2(ctx);
        case 3:
          return QueriesGenerated.rule_Condition_3_0(ctx);
        case 4:
          return QueriesGenerated.rule_Condition_3_1(ctx);
        case 5:
          return QueriesGenerated.rule_Condition_3_2(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no condition method for rule %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, SourceNodeQuery> snqMethods = new HashMap<String, SourceNodeQuery>();
  {
    int i = 0;
    snqMethods.put("1160334767769500823", new SNQ(i++));
    snqMethods.put("1160334767824300842", new SNQ(i++));
    snqMethods.put("1160334767803810983", new SNQ(i++));
    snqMethods.put("535590012929187407", new SNQ(i++));
  }
  @NotNull
  @Override
  public SourceNodeQuery getSourceNodeQuery(@NotNull QueryKey identity) {
    SourceNodeQuery query = identity.forFunctionNode(snqMethods);
    return (query != null ? query : super.getSourceNodeQuery(identity));
  }
  private static class SNQ implements SourceNodeQuery {
    private final int methodKey;
    public SNQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @Nullable
    public SNode evaluate(@NotNull SourceSubstituteMacroNodeContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.sourceNodeQuery_1_0(ctx);
        case 1:
          return QueriesGenerated.sourceNodeQuery_1_1(ctx);
        case 2:
          return QueriesGenerated.sourceNodeQuery_1_2(ctx);
        case 3:
          return QueriesGenerated.sourceNodeQuery_1_3(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, SourceNodesQuery> snsqMethods = new HashMap<String, SourceNodesQuery>();
  {
    int i = 0;
    snsqMethods.put("6227735282385519483", new SNsQ(i++));
    snsqMethods.put("6227735282385430446", new SNsQ(i++));
    snsqMethods.put("771150834212742767", new SNsQ(i++));
    snsqMethods.put("771150834212824623", new SNsQ(i++));
    snsqMethods.put("1160334767789134494", new SNsQ(i++));
    snsqMethods.put("1160334767798947044", new SNsQ(i++));
    snsqMethods.put("6227735282385705189", new SNsQ(i++));
    snsqMethods.put("1160334767767942573", new SNsQ(i++));
    snsqMethods.put("4583495899124421365", new SNsQ(i++));
    snsqMethods.put("4583495899124490802", new SNsQ(i++));
    snsqMethods.put("1160334767772786982", new SNsQ(i++));
    snsqMethods.put("1160334767792995904", new SNsQ(i++));
    snsqMethods.put("1160334767772900586", new SNsQ(i++));
    snsqMethods.put("1160334767792716654", new SNsQ(i++));
    snsqMethods.put("535590012928556014", new SNsQ(i++));
    snsqMethods.put("1160334767813803480", new SNsQ(i++));
    snsqMethods.put("1160334767803269792", new SNsQ(i++));
    snsqMethods.put("1160334767817115923", new SNsQ(i++));
    snsqMethods.put("1160334767818398477", new SNsQ(i++));
    snsqMethods.put("535590012929013603", new SNsQ(i++));
  }
  @NotNull
  @Override
  public SourceNodesQuery getSourceNodesQuery(@NotNull QueryKey identity) {
    SourceNodesQuery query = identity.forFunctionNode(snsqMethods);
    return (query != null ? query : super.getSourceNodesQuery(identity));
  }
  private static class SNsQ implements SourceNodesQuery {
    private final int methodKey;
    public SNsQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @NotNull
    public Collection<SNode> evaluate(@NotNull SourceSubstituteMacroNodesContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_0(ctx));
        case 1:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_1(ctx));
        case 2:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_2(ctx));
        case 3:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_3(ctx));
        case 4:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_4(ctx));
        case 5:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_5(ctx));
        case 6:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_6(ctx));
        case 7:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_7(ctx));
        case 8:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_8(ctx));
        case 9:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_9(ctx));
        case 10:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_10(ctx));
        case 11:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_11(ctx));
        case 12:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_12(ctx));
        case 13:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_13(ctx));
        case 14:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_14(ctx));
        case 15:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_15(ctx));
        case 16:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_16(ctx));
        case 17:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_17(ctx));
        case 18:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_18(ctx));
        case 19:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_19(ctx));
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, PropertyValueQuery> pvqMethods = new HashMap<String, PropertyValueQuery>();
  {
    int i = 0;
    pvqMethods.put("6227735282385519489", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "inputField"));
    pvqMethods.put("6227735282385446257", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "outputField"));
    pvqMethods.put("771150834212808723", new PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "actionName"));
    pvqMethods.put("771150834212742773", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "action"));
    pvqMethods.put("771150834212824629", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "measurement"));
    pvqMethods.put("1160334767789134500", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "measurementLabel"));
    pvqMethods.put("1160334767789192640", new PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "MeasurementName"));
    pvqMethods.put("1160334767798947050", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "triggerRule"));
    pvqMethods.put("1160334767799466276", new PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "amount"));
    pvqMethods.put("1160334767799039968", new PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "SeverityLevel"));
    pvqMethods.put("1160334767799368581", new PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), " "));
    pvqMethods.put("1160334767799404226", new PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "at/above/below"));
    pvqMethods.put("6227735282385223993", new PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), null));
    pvqMethods.put("6227735282385708199", new PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "Title"));
    pvqMethods.put("1160334767770846258", new PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L, 0xf8cc59b315L, "value"), "0"));
    pvqMethods.put("1160334767770863911", new PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L, 0xf8cc59b315L, "value"), "9"));
    pvqMethods.put("1160334767798169095", new PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L, 0xf8cc59b315L, "value"), "5"));
    pvqMethods.put("1160334767793050919", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "hGroup2"));
    pvqMethods.put("1160334767792536350", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "vpGroup2"));
    pvqMethods.put("535590012928558972", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "i"));
    pvqMethods.put("6227735282384773382", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "RMLLImpl"));
    pvqMethods.put("1160334767804411340", new PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L, 0xf8cc59b315L, "value"), "1"));
    pvqMethods.put("1160334767804427466", new PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L, 0xf8cc59b315L, "value"), "1"));
    pvqMethods.put("1160334767804431003", new PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L, 0xf8cc59b315L, "value"), "1"));
    pvqMethods.put("1160334767814735021", new PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L, 0xf8cc59b315L, "value"), "0"));
    pvqMethods.put("1160334767814734720", new PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L, 0xf8cc59b315L, "value"), "0"));
    pvqMethods.put("1160334767814737370", new PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L, 0xf8cc59b315L, "value"), "0"));
  }
  @NotNull
  @Override
  public PropertyValueQuery getPropertyValueQuery(@NotNull QueryKey identity) {
    PropertyValueQuery query = identity.forTemplateNode(pvqMethods);
    return (query != null ? query : super.getPropertyValueQuery(identity));
  }
  private static class PVQ extends PropertyValueQuery.Base {
    private final int methodKey;
    /*package*/ PVQ(int methodKey, SProperty property, String templateValue) {
      super(property, templateValue);
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull PropertyMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.propertyMacro_GetValue_1_0(ctx);
        case 1:
          return QueriesGenerated.propertyMacro_GetValue_1_1(ctx);
        case 2:
          return QueriesGenerated.propertyMacro_GetValue_1_2(ctx);
        case 3:
          return QueriesGenerated.propertyMacro_GetValue_1_3(ctx);
        case 4:
          return QueriesGenerated.propertyMacro_GetValue_1_4(ctx);
        case 5:
          return QueriesGenerated.propertyMacro_GetValue_1_5(ctx);
        case 6:
          return QueriesGenerated.propertyMacro_GetValue_1_6(ctx);
        case 7:
          return QueriesGenerated.propertyMacro_GetValue_1_7(ctx);
        case 8:
          return QueriesGenerated.propertyMacro_GetValue_1_8(ctx);
        case 9:
          return QueriesGenerated.propertyMacro_GetValue_1_9(ctx);
        case 10:
          return QueriesGenerated.propertyMacro_GetValue_1_10(ctx);
        case 11:
          return QueriesGenerated.propertyMacro_GetValue_1_11(ctx);
        case 12:
          return QueriesGenerated.propertyMacro_GetValue_1_12(ctx);
        case 13:
          return QueriesGenerated.propertyMacro_GetValue_1_13(ctx);
        case 14:
          return QueriesGenerated.propertyMacro_GetValue_1_14(ctx);
        case 15:
          return QueriesGenerated.propertyMacro_GetValue_1_15(ctx);
        case 16:
          return QueriesGenerated.propertyMacro_GetValue_1_16(ctx);
        case 17:
          return QueriesGenerated.propertyMacro_GetValue_1_17(ctx);
        case 18:
          return QueriesGenerated.propertyMacro_GetValue_1_18(ctx);
        case 19:
          return QueriesGenerated.propertyMacro_GetValue_1_19(ctx);
        case 20:
          return QueriesGenerated.propertyMacro_GetValue_1_20(ctx);
        case 21:
          return QueriesGenerated.propertyMacro_GetValue_2_0(ctx);
        case 22:
          return QueriesGenerated.propertyMacro_GetValue_2_1(ctx);
        case 23:
          return QueriesGenerated.propertyMacro_GetValue_2_2(ctx);
        case 24:
          return QueriesGenerated.propertyMacro_GetValue_3_0(ctx);
        case 25:
          return QueriesGenerated.propertyMacro_GetValue_3_1(ctx);
        case 26:
          return QueriesGenerated.propertyMacro_GetValue_3_2(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, ReferenceTargetQuery> rtqMethods = new HashMap<String, ReferenceTargetQuery>();
  {
    rtqMethods.put("535590012929206962", new RTQ(0, "i"));
    rtqMethods.put("1160334767770346267", new RTQ(1, "i"));
    rtqMethods.put("6227735282385852531", new RTQ(2, "inputField"));
    rtqMethods.put("6227735282385925787", new RTQ(3, "inputField"));
    rtqMethods.put("4583495899124966723", new RTQ(4, "action"));
    rtqMethods.put("1160334767768832423", new RTQ(5, "measurement"));
    rtqMethods.put("1160334767769135295", new RTQ(6, "measurement"));
    rtqMethods.put("1160334767772798917", new RTQ(7, "action"));
    rtqMethods.put("1160334767772900577", new RTQ(8, "action"));
    rtqMethods.put("1160334767816764510", new RTQ(9, "triggerRule"));
    rtqMethods.put("535590012929018138", new RTQ(10, "outputField"));
  }
  @NotNull
  @Override
  public ReferenceTargetQuery getReferenceTargetQuery(@NotNull QueryKey queryKey) {
    ReferenceTargetQuery query = queryKey.forTemplateNode(rtqMethods);
    return (query != null ? query : super.getReferenceTargetQuery(queryKey));
  }
  private static class RTQ extends ReferenceTargetQuery.Base {
    private final int methodKey;
    /*package*/ RTQ(int methodKey, String templateValue) {
      super(templateValue);
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull ReferenceMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.referenceMacro_GetReferent_0_0(ctx);
        case 1:
          return QueriesGenerated.referenceMacro_GetReferent_0_1(ctx);
        case 2:
          return QueriesGenerated.referenceMacro_GetReferent_1_0(ctx);
        case 3:
          return QueriesGenerated.referenceMacro_GetReferent_1_1(ctx);
        case 4:
          return QueriesGenerated.referenceMacro_GetReferent_1_2(ctx);
        case 5:
          return QueriesGenerated.referenceMacro_GetReferent_1_3(ctx);
        case 6:
          return QueriesGenerated.referenceMacro_GetReferent_1_4(ctx);
        case 7:
          return QueriesGenerated.referenceMacro_GetReferent_1_5(ctx);
        case 8:
          return QueriesGenerated.referenceMacro_GetReferent_1_6(ctx);
        case 9:
          return QueriesGenerated.referenceMacro_GetReferent_1_7(ctx);
        case 10:
          return QueriesGenerated.referenceMacro_GetReferent_1_8(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, CallArgumentQuery> caqMethods = new HashMap<String, CallArgumentQuery>();
  {
    caqMethods.put("1160334767814655088", new CAQ(0));
  }
  @NotNull
  @Override
  public CallArgumentQuery getTemplateCallArgumentQuery(@NotNull QueryKey queryKey) {
    CallArgumentQuery query = queryKey.forTemplateNode(caqMethods);
    return (query != null ? query : super.getTemplateCallArgumentQuery(queryKey));
  }
  private static class CAQ implements CallArgumentQuery {
    private final int methodKey;
    /*package*/ CAQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull TemplateArgumentContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.templateArgumentQuery_1_0(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private Map<String, LabelInputQuery> liqMethods = new HashMap<String, LabelInputQuery>();
  {
    liqMethods.put("1160334767815119032", new LIQ(0));
    liqMethods.put("1160334767812272998", new LIQ(1));
    liqMethods.put("1160334767812449703", new LIQ(2));
    liqMethods.put("1160334767812379246", new LIQ(3));
  }
  @NotNull
  @Override
  public LabelInputQuery getLabelInputQuery(@NotNull QueryKey key) {
    LabelInputQuery query = key.forFunctionNode(liqMethods);
    return (query != null ? query : super.getLabelInputQuery(key));
  }
  private static class LIQ implements LabelInputQuery {
    private final int methodKey;
    private LIQ(int key) {
      methodKey = key;
    }
    @Nullable
    @Override
    public Object evaluate(@NotNull LabelKeyQueryContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.labelMapNode1_0(ctx);
        case 1:
          return QueriesGenerated.labelMapNode1_1(ctx);
        case 2:
          return QueriesGenerated.labelMapNode1_2(ctx);
        case 3:
          return QueriesGenerated.labelMapNode1_3(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }

  private static final class PROPS {
    /*package*/ static final SProperty type$6ngb = MetaAdapterFactory.getProperty(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0xab3ad99153fd70fL, 0x101a5652d6e3a065L, "type");
    /*package*/ static final SProperty comparator$KuX2 = MetaAdapterFactory.getProperty(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0xab3ad99155569e4L, 0xab3ad99156b02e3L, "comparator");
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
    /*package*/ static final SProperty amount$ZJp4 = MetaAdapterFactory.getProperty(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0xab3ad99155569e4L, 0xab3ad99156e2f38L, "amount");
    /*package*/ static final SProperty severity$nSqE = MetaAdapterFactory.getProperty(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0xab3ad99155569e4L, 0xab3ad99156e24e4L, "severity");
    /*package*/ static final SProperty min$wfiJ = MetaAdapterFactory.getProperty(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0xab3ad99153fd70fL, 0xab3ad99154bf7d0L, "min");
    /*package*/ static final SProperty max$QmHx = MetaAdapterFactory.getProperty(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0xab3ad99153fd70fL, 0xab3ad99154c0022L, "max");
  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink measurement$jlSV = MetaAdapterFactory.getReferenceLink(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0xab3ad99155569e4L, 0xab3ad9915583370L, "measurement");
    /*package*/ static final SReferenceLink field$opyZ = MetaAdapterFactory.getReferenceLink(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0x566d5c3e4db52986L, 0x566d5c3e4db52eebL, "field");
    /*package*/ static final SReferenceLink measurement$iS7O = MetaAdapterFactory.getReferenceLink(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0xab3ad99153fe343L, 0xab3ad99153ff232L, "measurement");
    /*package*/ static final SContainmentLink expression$A4nd = MetaAdapterFactory.getContainmentLink(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0xab3ad99153fe343L, 0xab3ad991540865eL, "expression");
    /*package*/ static final SContainmentLink expression$ZTQr = MetaAdapterFactory.getContainmentLink(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0x566d5c3e4db490c8L, 0x566d5c3e4db4e074L, "expression");
    /*package*/ static final SContainmentLink inputField$5bPs = MetaAdapterFactory.getContainmentLink(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0x566d5c3e4db17b4aL, 0x566d5c3e4db44e6cL, "inputField");
    /*package*/ static final SContainmentLink outputField$PINX = MetaAdapterFactory.getContainmentLink(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0x566d5c3e4db17b4aL, 0x566d5c3e4db4963aL, "outputField");
    /*package*/ static final SContainmentLink action$3fvT = MetaAdapterFactory.getContainmentLink(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0x566d5c3e4db17b4aL, 0xab3ad99153b8fb5L, "action");
    /*package*/ static final SContainmentLink measurement$rSWi = MetaAdapterFactory.getContainmentLink(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0x566d5c3e4db17b4aL, 0xab3ad9915402dcbL, "measurement");
    /*package*/ static final SContainmentLink trigger$7eId = MetaAdapterFactory.getContainmentLink(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0x566d5c3e4db17b4aL, 0xab3ad991567c77aL, "trigger");
    /*package*/ static final SContainmentLink measurements$vk_X = MetaAdapterFactory.getContainmentLink(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0xab3ad9915390ee8L, 0xab3ad9915406fa8L, "measurements");
    /*package*/ static final SContainmentLink logger$lybB = MetaAdapterFactory.getContainmentLink(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0x566d5c3e4db17b4aL, 0xab3ad991572813eL, "logger");
  }
}
