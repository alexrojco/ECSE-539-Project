package RMLL.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import java.util.List;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

public class EnumerationDescriptor_MeasurementType extends EnumerationDescriptorBase {

  public EnumerationDescriptor_MeasurementType() {
    super(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0x101a5652d6e3a17dL, "MeasurementType", "r:66d9b93c-f562-4f88-af54-ce6ee3a9563c(RMLL.structure)/1160334767793873277");
  }

  private final EnumerationDescriptor.MemberDescriptor myMember_random_0 = new EnumerationDescriptor.MemberDescriptor("random", "random", 0x101a5652d6e3a17eL, "r:66d9b93c-f562-4f88-af54-ce6ee3a9563c(RMLL.structure)/1160334767793873278");
  private final EnumerationDescriptor.MemberDescriptor myMember_descending_0 = new EnumerationDescriptor.MemberDescriptor("descending", "descending", 0x101a5652d6e3a1c3L, "r:66d9b93c-f562-4f88-af54-ce6ee3a9563c(RMLL.structure)/1160334767793873347");
  private final EnumerationDescriptor.MemberDescriptor myMember_ascending_0 = new EnumerationDescriptor.MemberDescriptor("ascending", "ascending", 0x101a5652d6e3a20aL, "r:66d9b93c-f562-4f88-af54-ce6ee3a9563c(RMLL.structure)/1160334767793873418");

  private final EnumerationLiteralsIndex myIndex = EnumerationLiteralsIndex.build(0x16a79f2d7a8d4f36L, 0xae28276960b9e667L, 0x101a5652d6e3a17dL, 0x101a5652d6e3a17eL, 0x101a5652d6e3a1c3L, 0x101a5652d6e3a20aL);
  private final List<EnumerationDescriptor.MemberDescriptor> myMembers = new EnumerationDescriptorBase.MembersList(myIndex, myMember_random_0, myMember_descending_0, myMember_ascending_0);

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return null;
  }

  @NotNull
  @Override
  public List<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return myMembers;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String memberName) {
    if (memberName == null) {
      return null;
    }
    switch (memberName) {
      case "random":
        return myMember_random_0;
      case "descending":
        return myMember_descending_0;
      case "ascending":
        return myMember_ascending_0;
    }
    return null;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(long idValue) {
    int index = myIndex.index(idValue);
    if (index == -1) {
      return null;
    }
    return myMembers.get(index);
  }
}
